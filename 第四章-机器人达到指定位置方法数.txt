class Solution {
public:
    // 共有N点，起点M，走K步，终点P
    int ways(int N, int M, int K, int P)
    {
        std::vector<int> oDp(N, 0);
        oDp[P - 1] = 1;
        for (int i = 1; i <= K; i++)
        {	
            int iLeftUp = oDp[0];
            for (int j = 0; j < N; j++)
        	{
	        	int iTemp = oDp[j];
				if (j == 0)
				{
					oDp[j] = oDp[j + 1];
				}
				else if (j == N - 1)
				{
					oDp[j] = iLeftUp;
				}
				else
				{
					oDp[j] = iLeftUp + oDp[j + 1];
				}
				iLeftUp = iTemp;
			}
		}
		return oDp[M - 1];
	}
};



int main()
{
	Solution s;
	int iRes = s.ways(7, 4, 9, 5);
	
	return 0;
}